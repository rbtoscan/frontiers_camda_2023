ls
print ('hey')
read_file <- read.csv('./world-data-2023.csv',header=TRUE,sep=';',stringsAsFactors = F) #read csv into a dataframe
setwd("/Users/rodolfotoscan/Documents/estudos/UJ/phd/camda_2023/publication/viral_investigation")
results <- read.csv("overview_header_clean.tsv",sep="\t")
# Load the tidyr package
library(tidyr)
library(ggplot2)
library(dplyr)
# Separate the 'sample' column into three new columns
results <- separate(results, sample, into = c("year", "city", "sample_number"), sep = "_")
setwd("/Users/rodolfotoscan/Documents/estudos/UJ/phd/camda_2023/publication/viral_investigation")
setwd('~/Documents/estudos/UJ/phd/projects/camda_2023/publication/0_writing/data/amr')
amr_table <- read.csv('AMR_analytic_matrix_isolates-AMRs.csv')
View(amr_table)
amr_table_t <- t(amr_table)
View(amr_table_t)
df <- amr_table_t
colnames(df) <- as.character(df[1, ])  # Convert the first row to character and assign as column names
df <- df[-1, ]
View(df)
df <- data.frame(df[-1, ])
amr_table <- read.csv('AMR_analytic_matrix_isolates-AMRs.csv')
amr_table_t <- t(amr_table)
df <- amr_table_t
colnames(df) <- as.character(df[1, ])  # Convert the first row to character and assign as column names
df <- data.frame(df[-1, ])
View(df)
df[1,] <- colnames(df)
View(df)
df[1,] <- rownames(df)
df[,1] <- rownames(df)
View(df)
setwd('~/Documents/estudos/UJ/phd/projects/camda_2023/publication/0_writing/data/amr')
amr_table <- read.csv('AMR_analytic_matrix_isolates-AMRs.csv')
amr_table_t <- t(amr_table)
df <- amr_table_t
colnames(df) <- as.character(df[1, ])  # Convert the first row to character and assign as column names
df <- data.frame(df[-1, ])
df[,1] <- rownames(df)
View(df)
df$city <- rownames(df)
View(df)
setwd('~/Documents/estudos/UJ/phd/projects/camda_2023/publication/0_writing/data/amr')
amr_table <- read.csv('AMR_analytic_matrix_isolates-AMRs.csv')
amr_table_t <- t(amr_table)
df <- amr_table_t
colnames(df) <- as.character(df[1, ])  # Convert the first row to character and assign as column names
df <- data.frame(df[-1, ])
df$city <- rownames(df)
df$aux <- rownames(df)
df <- df %>%   separate(aux, into = c("a", "b","city","bla"), sep = "_")
library(randomForest)
library(Boruta)
library(pROC)
library(MDFS)
library(mltools)
library(stringr)
library(dplyr)
library(stringr)
library(tidyr)
setwd('~/Documents/estudos/UJ/phd/projects/camda_2023/publication/0_writing/data/amr')
amr_table <- read.csv('AMR_analytic_matrix_isolates-AMRs.csv')
amr_table_t <- t(amr_table)
df <- amr_table_t
colnames(df) <- as.character(df[1, ])  # Convert the first row to character and assign as column names
df <- data.frame(df[-1, ])
df$aux <- rownames(df)
df <- df %>%   separate(aux, into = c("a", "b","city","bla"), sep = "_")
df <- subset(df, select = -c(a,b,bla) )
amr_table <- read.csv('AMR_analytic_matrix_isolates-AMRs.csv')
amr_table_t <- t(amr_table)
df <- amr_table_t
library(randomForest)
library(Boruta)
library(pROC)
library(MDFS)
library(mltools)
library(stringr)
library(dplyr)
library(stringr)
library(tidyr)
setwd('~/Documents/estudos/UJ/phd/projects/camda_2023/publication/0_writing/data/amr')
amr_table <- read.csv('AMR_analytic_matrix_isolates-AMRs.csv')
amr_table_t <- t(amr_table)
df <- amr_table_t
colnames(df) <- as.character(df[1, ])  # Convert the first row to character and assign as column names
df <- data.frame(df[-1, ])
df$aux <- rownames(df)
df <- df %>%   separate(aux, into = c("a", "b","city","bla"), sep = "_")
df <- subset(df, select = -c(a,b,bla) )
View(amr_table)
library(randomForest)
library(Boruta)
library(pROC)
library(MDFS)
library(mltools)
library(stringr)
library(dplyr)
library(stringr)
library(tidyr)
setwd('~/Documents/estudos/UJ/phd/projects/camda_2023/publication/0_writing/data/amr')
amr_table <- read.csv('AMR_analytic_matrix_isolates-AMRs.csv')
amr_table_t <- t(amr_table)
df <- amr_table_t
colnames(df) <- as.character(df[1, ])  # Convert the first row to character and assign as column names
df <- data.frame(df[-1, ])
df$aux <- rownames(df)
df <- df %>%   separate(aux, into = c("a","city","b"), sep = "_")
df <- subset(df, select = -c(a,b) )
library(randomForest)
library(Boruta)
library(pROC)
library(MDFS)
library(mltools)
library(stringr)
library(dplyr)
library(stringr)
library(tidyr)
setwd('~/Documents/estudos/UJ/phd/projects/camda_2023/publication/0_writing/data/amr')
amr_table <- read.csv('AMR_analytic_matrix_isolates-AMRs.csv')
amr_table_t <- t(amr_table)
df <- amr_table_t
colnames(df) <- as.character(df[1, ])  # Convert the first row to character and assign as column names
df <- data.frame(df[-1, ])
df$aux <- rownames(df)
df <- df %>%   separate(aux, into = c("a","city","b"), sep = "_")
df <- subset(df, select = -c(a,b) )
amr_table <- df
rm(df,amr_table_t)
View(amr_table)
library(randomForest)
library(Boruta)
library(pROC)
library(MDFS)
library(mltools)
library(stringr)
library(dplyr)
library(stringr)
library(tidyr)
setwd('~/Documents/estudos/UJ/phd/projects/camda_2023/publication/0_writing/data/amr')
amr_table <- read.csv('AMR_analytic_matrix_isolates-AMRs.csv')
amr_table_t <- t(amr_table)
df <- amr_table_t
colnames(df) <- as.character(df[1, ])  # Convert the first row to character and assign as column names
df <- data.frame(df[-1, ])
df$aux <- rownames(df)
df <- df %>%   separate(aux, into = c("a","city","b"), sep = "_")
df <- subset(df, select = -c(a,b) )
df <- df %>%
select(city, everything())
amr_table <- df
rm(df,amr_table_t)
View(amr_table)
isolates <- read.csv('/Users/rodolfotoscan/Documents/estudos/UJ/phd/projects/camda_2023/publication/0_writing/data/isolates/CAMDA2023_isolates.csv')
isolates <- read.csv('/Users/rodolfotoscan/Documents/estudos/UJ/phd/projects/camda_2023/publication/0_writing/data/isolates/CAMDA2023_isolates.csv',sep=';')
View(isolates)
library(randomForest)
library(Boruta)
library(pROC)
library(MDFS)
library(mltools)
library(stringr)
library(dplyr)
library(stringr)
library(tidyr)
isolates <- read.csv('/Users/rodolfotoscan/Documents/estudos/UJ/phd/projects/camda_2023/publication/0_writing/data/isolates/CAMDA2023_isolates.csv',sep=';')
library(randomForest)
library(Boruta)
library(pROC)
library(MDFS)
library(mltools)
library(stringr)
library(dplyr)
library(stringr)
library(tidyr)
setwd='/Users/rodolfotoscan/Documents/estudos/UJ/phd/projects/camda_2023/publication/0_writing/data/isolates/')
library(randomForest)
library(Boruta)
library(pROC)
library(MDFS)
library(mltools)
library(stringr)
library(dplyr)
library(stringr)
library(tidyr)
setwd('/Users/rodolfotoscan/Documents/estudos/UJ/phd/projects/camda_2023/publication/0_writing/data/isolates/')
isolates <- read.csv('CAMDA2023_isolates.csv',sep=';')
View(isolates)
isolates_melted <- read.csv('isolates_melted_resistome.tsv',sep='\t')
isolates_melted <- read.csv('isolates_melted_resistome.tsv',sep='\t')
View(isolates_melted)
isolates_melted <- read.csv('isolates_melted_resistome.tsv',sep='\t',header = FALSE)
View(isolates_melted)
# Using acast function
isolates_unmelted <- acast(isolates_melted, row_names ~ col_names)
library(reshape2)
# Using acast function
isolates_unmelted <- acast(isolates_melted, row_names ~ col_names)
# Using acast function
isolates_unmelted <- acast(df, isolates_melted ~ col_index, value.var = "values")
matrix_data <- xtabs(~ V1 + V2, data = isolates_melted)
matrix_data <- data.frame(xtabs(~ V1 + V2, data = isolates_melted))
View(matrix_data)
str(isolates_melted)
# Assuming the Freq column needs to be set to 1 (indicating presence)
isolates_melted$Freq <- 1
# Create the matrix using xtabs
matrix_data <- xtabs(Freq ~ V1 + V2, data = isolates_melted)
isolates_melted <- read.csv('isolates_melted_resistome.tsv',sep='\t',header = FALSE)
View(isolates_melted)
# Convert the two columns into a table. This automatically creates a binary matrix of presence/absence (1/0)
matrix_data <- table(isolates_melted$V1, isolates_melted$V2)
isolates_melted <- read.csv('isolates_melted_resistome.tsv',sep='\t',header = FALSE)
binary_matrix <- isolates_melted %>%
distinct() %>%  # Ensure the data is unique
mutate(value = 1) %>%  # Create a binary indicator
spread(key = V2, value = value, fill = 0)
View(binary_matrix)
# Creating the binary matrix with the spread() function
binary_matrix <- isolates_melted %>%
distinct() %>%
mutate(value = 1) %>%
spread(key = V2, value = value, fill = 0)
# Set row names from the V1 column
row.names(binary_matrix) <- binary_matrix$V1
# Optionally remove the V1 column if it's no longer needed as a separate column
binary_matrix <- binary_matrix[, -which(names(binary_matrix) == "V1")]
# Print the corrected matrix
print(binary_matrix)
View(binary_matrix)
library(tidyverse)
+(t(table(isolates_melted)) > 0)
matrix <- +(t(table(isolates_melted)) > 0)
matrix <- data.frame(+(t(table(isolates_melted)) > 0))
View(matrix)
isolates_melted <- read.csv('isolates_melted_resistome.tsv',sep='\t',header = FALSE)
matrix <- data.frame(+(t(table(isolates_melted)) > 0))
library(randomForest)
library(Boruta)
library(pROC)
library(MDFS)
library(mltools)
library(stringr)
library(dplyr)
library(stringr)
library(tidyr)
library(reshape2)
setwd('/Users/rodolfotoscan/Documents/estudos/UJ/phd/projects/camda_2023/publication/0_writing/data/isolates/')
isolates <- read.csv('CAMDA2023_isolates.csv',sep=';')
# generated melted resistome
# cd ~/Documents/estudos/UJ/phd/projects/camda_2023/publication/0_writing/data/isolates
# while read l; do echo $l; grep "$l" CAMDA2023_isolates.csv | cut -f1 -d';' | sed "s/^/"$l"\t/g"; done < isolates_unique.txt > isolates_melted_resistome.tsv
isolates_melted <- read.csv('isolates_melted_resistome.tsv',sep='\t',header = FALSE)
matrix <- data.frame(+(t(table(isolates_melted)) > 0))
View(matrix)
View(matrix)
View(isolates_melted)
library(randomForest)
library(Boruta)
library(pROC)
library(MDFS)
library(mltools)
library(stringr)
library(dplyr)
library(stringr)
setwd('/Users/rodolfotoscan/Documents/estudos/UJ/phd/projects/camda_2023/publication/0_writing/data/isolates/')
isolates <- read.csv('CAMDA2023_isolates.csv',sep=';')
# generated melted resistome
# cd ~/Documents/estudos/UJ/phd/projects/camda_2023/publication/0_writing/data/isolates
# while read l; do echo $l; grep "$l" CAMDA2023_isolates.csv | cut -f1 -d';' | sed "s/^/"$l"\t/g"; done < isolates_unique.txt > isolates_melted_resistome.tsv
isolates_melted <- read.csv('isolates_melted_resistome.tsv',sep='\t',header = FALSE)
View(isolates)
View(isolates_melted)
isolates_matrix <- read.csv('/Users/rodolfotoscan/Documents/estudos/UJ/phd/projects/camda_2023/publication/0_writing/data/isolates/isolates_matrix.csv')
isolates_matrix <- read.csv('/Users/rodolfotoscan/Documents/estudos/UJ/phd/projects/camda_2023/publication/0_writing/data/isolates/isolates_matrix.csv')
View(isolates_matrix)
amr_raw <- read.csv('/Users/rodolfotoscan/Documents/estudos/UJ/phd/projects/camda_2023/publication/0_writing/data/amr/AMR_analytic_matrix.csv')
amr_isolates_kept <- read.csv('/Users/rodolfotoscan/Documents/estudos/UJ/phd/projects/camda_2023/publication/0_writing/data/amr/AMR_analytic_matrix_isolates-AMRs.csv')
amrpp_isolates_mapping_file <- read.csv('/Users/rodolfotoscan/Documents/estudos/UJ/phd/projects/camda_2023/publication/0_writing/data/amr/amr_mapping_file.csv')
isolates_matrix <- read.csv('/Users/rodolfotoscan/Documents/estudos/UJ/phd/projects/camda_2023/publication/0_writing/data/isolates/isolates_matrix.csv')
View(amr_raw)
View(amrpp_isolates_mapping_file)
amr_raw <- read.csv('/Users/rodolfotoscan/Documents/estudos/UJ/phd/projects/camda_2023/publication/0_writing/data/amr/AMR_analytic_matrix.csv')
amr_isolates_kept <- read.csv('/Users/rodolfotoscan/Documents/estudos/UJ/phd/projects/camda_2023/publication/0_writing/data/amr/AMR_analytic_matrix_isolates-AMRs.csv')
amrpp_isolates_mapping_file <- read.csv('/Users/rodolfotoscan/Documents/estudos/UJ/phd/projects/camda_2023/publication/0_writing/data/amr/amr_mapping_file.csv',sep=';')
isolates_matrix <- read.csv('/Users/rodolfotoscan/Documents/estudos/UJ/phd/projects/camda_2023/publication/0_writing/data/isolates/isolates_matrix.csv')
View(amrpp_isolates_mapping_file)
isolates_matrix_t <- t(isolates_matrix)
View(isolates_matrix_t)
isolates_matrix_t$amr <- rownames(isolates_matrix_t)
isolates_matrix_t$amr <- rownames(isolates_matrix_t)
View(isolates_matrix_t)
